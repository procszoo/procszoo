import os
from subprocess import check_call, CalledProcessError
__all__ = ['dhcp_if', 'DHCPFailed']

_dhclient = '@DHCLIENT@'

class DHCPFailed(Exception):
    pass

devnull = "/dev/null"
if hasattr(os, "devnull"):
    devnull = os.devnull
devnull_fd = os.open(devnull, os.O_RDWR)

def dhcp_if(ifname, ipv4=True, ipv6=None, port=68,
                timeout=None, leases=None,
                pid=None):
    _cmd = [_dhclient]
    if ipv4 and ipv6:
        raise RuntimeError('cannot use both "ipv4" and "ipv6" options')
    if ipv4:
        _cmd.append('-4')
    if ipv6:
        _cmd.append('-6')
    if port:
        port = int(port)
        _cmd.append('-p')
        _cmd.append('%d' % port)
    if timeout:
        timeout = int(timeout)
        _cmd.append('--timeout')
        _cmd.append('%d' % timeout)

    if leases is None:
        leases = '/var/run/dhcpclient-%s.leases' % ifname
    _cmd.append('-lf')
    _cmd.append(leases)

    if pid is None:
        pid = '/var/run/dhclient-%s.pid' % ifname
    _cmd.append('-pf')
    _cmd.append(pid)

    _cmd.append(ifname)
    try:
        check_call(_cmd, stdout=devnull_fd, stderr=devnull_fd)
    except CalledProcessError:
        raise DHCPFailed('failed to dhcp')

