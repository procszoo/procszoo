import os
from pyroute2 import IPRoute
from subprocess import check_call, CalledProcessError

from procszoo.network.dhcp import dhcp_if

__all__ = ['is_ifindex_wireless', 'is_ifname_wireless', 'dhcp_if',
               'is_all_ifindexes_wireless', 'is_all_ifnames_wireless',
               'add_ifname_to_bridge',]

devnull = "/dev/null"
if hasattr(os, "devnull"):
    devnull = os.devnull
devnull_fd = os.open(devnull, os.O_RDWR)


def _is_wireless_or_not(ifname):
    _cmd = ['@IW@']
    _cmd.append(ifname)
    _cmd.append('info')
    ret = True
    try:
        check_call(_cmd, stdout=devnull_fd, stderr=devnull_fd)
    except CalledProcessError:
        ret = False
    return ret


def is_ifindex_wireless(ifindex):
    ipr = IPRoute()
    ifname = [l.get_attr('IFLA_IFNAME') for l in ipr.get_links()
                  if l.get('index') == ifindex][0]
    ipr.close()
    return is_ifname_wireless(ifname)


def is_ifname_wireless(ifname):
    return _is_wireless_or_not(ifname)


def is_all_ifindexes_wireless(ifindexes):
    ret = {}
    if not isinstance(ifindexes, list):
        ifindexes = [ifindexes]
    for ifindex in ifindexes:
        ret[ifindex] = is_ifindex_wireless(ifindex)
    return ret


def is_all_ifnames_wireless(ifnames):
    ret = {}
    if not isinstance(ifnames, list):
        ifnames = [ifnames]
    for ifname in ifnames:
        ret[ifname] = is_ifname_wireless(ifname)
    return ret

def add_ifname_to_bridge(ifname, bridge):
    _cmd = ['@BRCTL@', 'addif', bridge, ifname]
    try:
        check_call(_cmd, stdout=devnull_fd, stderr=devnull_fd)
    except CalledProcessError:
        raise NetworkSettingError('failed to add port %s to bridge %s' %
                               (ifname, bridge))
